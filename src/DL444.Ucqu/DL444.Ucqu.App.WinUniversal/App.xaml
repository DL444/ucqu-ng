<Application
    x:Class="DL444.Ucqu.App.WinUniversal.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DL444.Ucqu.App.WinUniversal"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:converters="using:DL444.Ucqu.App.WinUniversal.Converters"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Dark">
                            <x:Double x:Key="AppTitleBarHeight">32</x:Double>
                            <Thickness x:Key="AppTitleBarMargin">0,32,0,0</Thickness>
                            <x:Double x:Key="AppLeftPaneCompactLength">40</x:Double>
                            <x:Double x:Key="AppLeftPaneOpenLength">320</x:Double>
                            <x:Double x:Key="AppTopPaneOpenLength">360</x:Double>
                            <x:Double x:Key="SignInPageTextBoxWidth">280</x:Double>
                            <StaticResource x:Key="AppPaneBackgroundBrush" ResourceKey="SystemControlChromeMediumLowAcrylicWindowMediumBrush" />
                            <StaticResource x:Key="SignInPageBackgroundBrush" ResourceKey="SystemControlAcrylicElementMediumHighBrush" />
                            <SolidColorBrush x:Key="NavigationViewTopPaneBackground" Color="Transparent" />
                            <Color x:Key="DestructiveWarningColor">#FF4F4F</Color>
                            <SolidColorBrush x:Key="DestructiveWarningColorBrush" Color="{StaticResource DestructiveWarningColor}" />
                            <Color x:Key="NonDestructiveWarningColor">#FFC200</Color>
                            <SolidColorBrush x:Key="NonDestructiveWarningColorBrush" Color="{StaticResource NonDestructiveWarningColor}" />
                            <SolidColorBrush x:Key="ScoreAlternateRowBackgroundBrush" Color="{ThemeResource SystemBaseLowColor}" Opacity="0.6" />
                            <SolidColorBrush x:Key="SummaryCalendarFreeSlotBrush" Color="Transparent" />
                            <SolidColorBrush x:Key="SummaryCalendarCourseSlotBrush" Color="{ThemeResource SystemAccentColor}" />
                            <SolidColorBrush x:Key="SummaryCalendarExamSlotBrush" Color="{StaticResource DestructiveWarningColor}" />
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Light">
                            <Color x:Key="DestructiveWarningColor">#EF4136</Color>
                            <SolidColorBrush x:Key="DestructiveWarningColorBrush" Color="{StaticResource DestructiveWarningColor}" />
                            <Color x:Key="NonDestructiveWarningColor">#FF8B00</Color>
                            <SolidColorBrush x:Key="NonDestructiveWarningColorBrush" Color="{StaticResource NonDestructiveWarningColor}" />
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <converters:InvertedVisibilityBooleanConverter x:Key="InvertedVisibilityBooleanConverter" />

            <Style x:Key="AppNavigationPaneStyle" TargetType="muxc:NavigationView">
                <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="muxc:NavigationView">
                            <Grid x:Name="RootGrid">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="DisplayModeGroup">
                                        <VisualState x:Name="Compact" />

                                        <VisualState x:Name="Expanded">
                                            <VisualState.Setters>
                                                <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource NavigationViewExpandedPaneBackground}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Minimal">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="TopNavigationMinimal" />

                                        <VisualState x:Name="MinimalWithBackButton">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TogglePaneGroup">
                                        <VisualState x:Name="TogglePaneButtonVisible" />
                                        <VisualState x:Name="TogglePaneButtonCollapsed" />
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="HeaderGroup">
                                        <VisualState x:Name="HeaderVisible" />
                                        <VisualState x:Name="HeaderCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="AutoSuggestGroup">
                                        <VisualState x:Name="AutoSuggestBoxVisible" />
                                        <VisualState x:Name="AutoSuggestBoxCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                                                <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="PaneStateGroup">
                                        <VisualState x:Name="NotClosedCompact" />
                                        <VisualState x:Name="ClosedCompact">
                                            <VisualState.Setters>
                                                <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed"/>
                                                <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                        <VisualState x:Name="ListSizeFull"/>
                                        <VisualState x:Name="ListSizeCompact">
                                            <VisualState.Setters>
                                                <Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}"/>
                                                <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
                                                <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed" />
                                                <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left"/>
                                                <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                        <VisualState x:Name="TitleBarVisible" />
                                        <VisualState x:Name="TitleBarCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="OverflowLabelGroup">
                                        <VisualState x:Name="OverflowButtonWithLabel" />
                                        <VisualState x:Name="OverflowButtonNoLabel">
                                            <VisualState.Setters>
                                                <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="BackButtonGroup">
                                        <VisualState x:Name="BackButtonVisible" />
                                        <VisualState x:Name="BackButtonCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="PaneVisibilityGroup">
                                        <VisualState x:Name="PaneVisible" />
                                        <VisualState x:Name="PaneCollapsed">
                                            <VisualState.Setters>
                                                <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                                                <!-- write it here and interfere. But these values work together to hide -->
                                                <!-- the left pane. -->
                                                <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                                                <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <!-- Button grid -->
                                <Grid
                            x:Name="PaneToggleButtonGrid"
                            Margin="0,0,0,8"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Canvas.ZIndex="100">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Grid x:Name="TogglePaneTopPadding"
                                  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                    <Grid x:Name="ButtonHolderGrid" Grid.Row="1">
                                        <Button
                                    x:Name="NavigationViewBackButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    VerticalAlignment="Top"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                    IsEnabled="{TemplateBinding IsBackEnabled}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip x:Name="NavigationViewBackButtonToolTip"/>
                                            </ToolTipService.ToolTip>
                                        </Button>
                                        <Button 
                                    x:Name="NavigationViewCloseButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    VerticalAlignment="Top">
                                            <ToolTipService.ToolTip>
                                                <ToolTip x:Name="NavigationViewCloseButtonToolTip"/>
                                            </ToolTipService.ToolTip>
                                        </Button>
                                        <Button
                                    x:Name="TogglePaneButton"
                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                    AutomationProperties.LandmarkType="Navigation" HorizontalAlignment="Center"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                    VerticalAlignment="Top">
                                            <TextBlock
                                        x:Name="PaneTitleTextBlock" 
                                        Grid.Column="0"
                                        Text="{TemplateBinding PaneTitle}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource NavigationViewItemHeaderTextStyle}"/>
                                        </Button>
                                        <Grid
                                    x:Name="PaneTitleHolder"
                                    Visibility="Collapsed">
                                            <ContentControl
                                        x:Name="PaneTitlePresenter"
                                        Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}"
                                        IsTabStop="False"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"/>
                                        </Grid>
                                    </Grid>
                                </Grid>

                                <!-- Content layouts -->
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- DisplayMode top -->
                                    <StackPanel
                                x:Name="TopNavArea"
                                Background="{ThemeResource NavigationViewTopPaneBackground}"
                                Grid.Row="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Canvas.ZIndex="1"
                                contract4Present:XYFocusKeyboardNavigation="Enabled">

                                        <Grid x:Name="TopNavTopPadding"
                                      Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"/>

                                        <Grid x:Name="TopNavGrid" 
                                      Height="{ThemeResource NavigationViewTopPaneHeight}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid 
                                        x:Name="TopNavLeftPadding" 
                                        Grid.Column="1"
                                        Width="0"/>

                                            <ContentControl
                                        x:Name="PaneHeaderOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="2"/>

                                            <ContentControl
                                        x:Name="PaneTitleOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="2"/>

                                            <!-- Top nav ItemsRepeater -->
                                            <muxc:ItemsRepeaterScrollHost
                                            Grid.Column="3" HorizontalAlignment="Center">
                                                <ScrollViewer
                                            HorizontalScrollMode="Disabled"
                                            HorizontalScrollBarVisibility="Hidden"
                                            VerticalScrollMode="Disabled"
                                            VerticalScrollBarVisibility="Hidden">
                                                    <muxc:ItemsRepeater 
                                                AutomationProperties.LandmarkType="Navigation"
                                                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                AutomationProperties.AccessibilityView = "Content"
                                                x:Name="TopNavMenuItemsHost">
                                                        <muxc:ItemsRepeater.Layout>
                                                            <muxc:StackLayout Orientation="Horizontal"/>
                                                        </muxc:ItemsRepeater.Layout>
                                                    </muxc:ItemsRepeater>
                                                </ScrollViewer>
                                            </muxc:ItemsRepeaterScrollHost>

                                            <Button 
                                        x:Name="TopNavOverflowButton"
                                        Grid.Column="4"
                                        Content="More"
                                        Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}"
                                        Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                                <Button.Flyout>
                                                    <Flyout
                                                contract7NotPresent:Placement="Bottom"
                                                contract7Present:Placement="BottomEdgeAlignedRight"
                                                ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}">
                                                        <Flyout.FlyoutPresenterStyle>
                                                            <Style TargetType="FlyoutPresenter">
                                                                <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                                                                <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                                <Setter Property="Margin" Value="0,-4,0,0" />
                                                                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                                <!-- This line causes compiler error for some reason. -->
                                                                <!--<contract7Present:Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />-->
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="FlyoutPresenter">
                                                                            <ScrollViewer
                                                                        x:Name="ScrollViewer"
                                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                        AutomationProperties.AccessibilityView="Raw">
                                                                                <ContentPresenter
                                                                            x:Name="ContentPresenter"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            Content="{TemplateBinding Content}"
                                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                                            contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}"/>
                                                                            </ScrollViewer>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Flyout.FlyoutPresenterStyle>
                                                        <muxc:ItemsRepeaterScrollHost>
                                                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                                <muxc:ItemsRepeater
                                                                    AutomationProperties.AccessibilityView = "Content"
                                                                    x:Name="TopNavMenuItemsOverflowHost"/>
                                                            </ScrollViewer>
                                                        </muxc:ItemsRepeaterScrollHost>
                                                    </Flyout>
                                                </Button.Flyout>
                                            </Button>

                                            <ContentControl
                                        x:Name="PaneCustomContentOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="5"/>

                                            <Grid
                                        x:Name="TopPaneAutoSuggestArea"
                                        Height="{ThemeResource NavigationViewTopPaneHeight}"
                                        Grid.Column="6">

                                                <ContentControl
                                            x:Name="TopPaneAutoSuggestBoxPresenter"
                                            Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}"
                                            MinWidth="48"
                                            IsTabStop="False"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center"/>
                                            </Grid>

                                            <ContentControl
                                        x:Name="PaneFooterOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="7" />
                                            <!-- Top footer menu ItemsRepeater -->
                                            <muxc:ItemsRepeater
                                        Grid.Column="8"
                                        AutomationProperties.LandmarkType="Navigation"
                                        AutomationProperties.AccessibilityView = "Content"
                                        x:Name="TopFooterMenuItemsHost">
                                                <muxc:ItemsRepeater.Layout>
                                                    <muxc:StackLayout Orientation="Horizontal"/>
                                                </muxc:ItemsRepeater.Layout>
                                            </muxc:ItemsRepeater>

                                        </Grid>
                                        <Border
                                    x:Name="TopNavContentOverlayAreaGrid"
                                    Child="{TemplateBinding ContentOverlay}" />
                                    </StackPanel>

                                    <!-- Displaymode (compact/minimal/normal) left -->
                                    <SplitView
                                x:Name="RootSplitView"
                                Background="{TemplateBinding Background}"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                DisplayMode="Inline"
                                IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                IsTabStop="False"
                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                PaneBackground="{ThemeResource NavigationViewDefaultPaneBackground}"
                            
                                Grid.Row="1">

                                        <SplitView.Pane>
                                            <Grid 
                                        x:Name="PaneContentGrid"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="0"/>
                                                    <!-- above button margin + back button space -->
                                                    <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" MinHeight="{StaticResource NavigationViewPaneHeaderRowMinHeight}"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="8"/>
                                                    <!-- above list margin -->
                                                    <RowDefinition x:Name="ItemsContainerRow" Height="*"/>
                                                </Grid.RowDefinitions>

                                                <Grid x:Name="ContentPaneTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                                <Grid Grid.Row="2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition x:Name="PaneHeaderContentBorderRow"/>
                                                    </Grid.RowDefinitions>

                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn"/>
                                                        <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <ContentControl
                                                x:Name="PaneHeaderContentBorder"
                                                IsTabStop="False"
                                                VerticalContentAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                Grid.Column="2" />
                                                </Grid>

                                                <Grid
                                            x:Name="AutoSuggestArea"
                                            Grid.Row="3"
                                            Height="{ThemeResource NavigationViewTopPaneHeight}"
                                            VerticalAlignment="Center">

                                                    <ContentControl
                                                x:Name="PaneAutoSuggestBoxPresenter"
                                                Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
                                                IsTabStop="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Center"/>

                                                    <Button
                                                x:Name="PaneAutoSuggestButton"
                                                Visibility="Collapsed"
                                                Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
                                                Width="{TemplateBinding CompactPaneLength}"/>
                                                </Grid>

                                                <ContentControl
                                            x:Name="PaneCustomContentBorder"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Row="4" />

                                                <!-- "Non header" content -->
                                                <Grid x:Name="ItemsContainerGrid" Grid.Row="6" Margin="0,0,0,8">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition x:Name="MenuItemsRow" Height="Auto" MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"/>
                                                        <!-- MenuItems -->
                                                        <RowDefinition Height="*" MinHeight="21"/>
                                                        <!-- Fill spacing -->
                                                        <RowDefinition Height="Auto" />
                                                        <!-- PaneFooter -->
                                                        <RowDefinition x:Name="FooterItemsRow" Height="Auto" MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"/>
                                                        <!-- FooterItems -->
                                                    </Grid.RowDefinitions>

                                                    <!-- MenuItems -->
                                                    <muxc:ItemsRepeaterScrollHost
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch">
                                                        <ScrollViewer x:Name="MenuItemsScrollViewer"
                                                    TabNavigation="Local"
                                                    VerticalScrollBarVisibility="Auto">
                                                            <!-- Left nav ItemsRepeater -->
                                                            <muxc:ItemsRepeater
                                                        x:Name="MenuItemsHost"
                                                        AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                        AutomationProperties.AccessibilityView = "Content"/>
                                                        </ScrollViewer>
                                                    </muxc:ItemsRepeaterScrollHost>

                                                    <muxc:NavigationViewItemSeparator x:Name="VisualItemsSeparator"
                                                Grid.Row="1" VerticalAlignment="Center"
                                                Visibility="Collapsed" HorizontalAlignment="Stretch"/>

                                                    <!-- PaneFooter -->
                                                    <ContentControl x:Name="FooterContentBorder"
                                                        IsTabStop="False"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Grid.Row="2" />

                                                    <!-- FooterItems -->
                                                    <muxc:ItemsRepeaterScrollHost Grid.Row="3">
                                                        <ScrollViewer x:Name="FooterItemsScrollViewer"
                                                        contract7Present:VerticalAnchorRatio="1">
                                                            <muxc:ItemsRepeater
                                                        x:Name="FooterMenuItemsHost"
                                                        AutomationProperties.AccessibilityView = "Content"/>
                                                        </ScrollViewer>
                                                    </muxc:ItemsRepeaterScrollHost>
                                                </Grid>
                                            </Grid>
                                        </SplitView.Pane>

                                        <SplitView.Content>
                                            <Grid x:Name="ContentGrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid x:Name="ContentTopPadding"
                                            Grid.ColumnSpan="2"
                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"/>

                                                <Grid x:Name="ContentLeftPadding" Grid.Row="1"/>

                                                <ContentControl
                                            x:Name="HeaderContent"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            MinHeight="{StaticResource PaneToggleButtonHeight}"
                                            IsTabStop="False"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"/>

                                                <ContentPresenter
                                            AutomationProperties.LandmarkType="Main"
                                            Grid.Row="2"
                                            Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Content}"/>
                                            </Grid>
                                        </SplitView.Content>
                                    </SplitView>

                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScheduleSummaryCalendarViewStyle" TargetType="CalendarView" BasedOn="{StaticResource CalendarViewRevealStyle}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FirstDayOfWeek" Value="Monday" />
                <Setter Property="CalendarViewDayItemStyle" Value="{ThemeResource SlottedCalendarViewDayItemRevealStyle}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="IsOutOfScopeEnabled" Value="False" />
            </Style>

            <Style x:Key="SlottedCalendarViewDayItemRevealStyle" TargetType="CalendarViewDayItem">
                <Setter Property="MinWidth" Value="40" />
                <Setter Property="MinHeight" Value="40" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Padding" Value="0, 0, 0, 4" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CalendarViewDayItem">
                            <Grid x:Name="Root">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid Height="4" Margin="4,0,4,0" VerticalAlignment="Bottom">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    
                                    <Ellipse Grid.Column="0" Fill="{Binding Slot0Brush}" Height="4" Width="4" />
                                    <Ellipse Grid.Column="1" Fill="{Binding Slot1Brush}" Height="4" Width="4" />
                                    <Ellipse Grid.Column="2" Fill="{Binding Slot2Brush}" Height="4" Width="4" />
                                    <Ellipse Grid.Column="3" Fill="{Binding Slot3Brush}" Height="4" Width="4" />
                                    <Ellipse Grid.Column="4" Fill="{Binding Slot4Brush}" Height="4" Width="4" />
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MiscellaneousPageToggleSwitchStyle" TargetType="ToggleSwitch">
                <Setter Property="Foreground" Value="{ThemeResource ToggleSwitchContentForeground}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="ManipulationMode" Value="System,TranslateX" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleSwitch">
                            <Grid
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="StrokeThickness">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ToggleStates">

                                        <VisualStateGroup.Transitions>
                                            <VisualTransition x:Name="DraggingToOnTransition"
                      From="Dragging"
                      To="On"
                      GeneratedDuration="0">

                                                <Storyboard>
                                                    <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="DraggingToOffTransition"
                      From="Dragging"
                      To="Off"
                      GeneratedDuration="0">

                                                <Storyboard>
                                                    <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}" />
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OnToOffTransition"
                      From="On"
                      To="Off"
                      GeneratedDuration="0">

                                                <Storyboard>
                                                    <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}" />
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OffToOnTransition"
                      From="Off"
                      To="On"
                      GeneratedDuration="0">

                                                <Storyboard>
                                                    <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Dragging" />
                                        <VisualState x:Name="Off" />
                                        <VisualState x:Name="On">

                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform"
                        Storyboard.TargetProperty="X"
                        To="24"
                        Duration="0" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ContentStates">
                                        <VisualState x:Name="OffContent">

                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="OffContentPresenter"
                        Storyboard.TargetProperty="Opacity"
                        To="1"
                        Duration="0" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>True</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OnContent">

                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="OnContentPresenter"
                        Storyboard.TargetProperty="Opacity"
                        To="1"
                        Duration="0" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>True</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="HeaderContentPresenter"
                x:DeferLoadStrategy="Lazy"
                Grid.Row="0"
                Content="{TemplateBinding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                Foreground="{ThemeResource ToggleSwitchHeaderForeground}"
                IsHitTestVisible="False"
                Margin="{ThemeResource ToggleSwitchTopHeaderMargin}"
                TextWrapping="Wrap"
                VerticalAlignment="Top"
                Visibility="Collapsed"
                AutomationProperties.AccessibilityView="Raw" />
                                <Grid
                Grid.Row="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{ThemeResource ToggleSwitchPreContentMargin}" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="{ThemeResource ToggleSwitchPostContentMargin}" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="12" MaxWidth="12" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="SwitchAreaGrid"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="3"
                  Margin="0,5"
                  Control.IsTemplateFocusTarget="True"
                  Background="{ThemeResource ToggleSwitchContainerBackground}" />
                                    <ContentPresenter x:Name="OffContentPresenter"
                  Grid.RowSpan="3"
                  Grid.Column="2"
                  Opacity="0"
                  Foreground="{TemplateBinding Foreground}"
                  IsHitTestVisible="False"
                  Content="{TemplateBinding OffContent}"
                  ContentTemplate="{TemplateBinding OffContentTemplate}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  AutomationProperties.AccessibilityView="Raw" />
                                    <ContentPresenter x:Name="OnContentPresenter"
                  Grid.RowSpan="3"
                  Grid.Column="2"
                  Opacity="0"
                  Foreground="{TemplateBinding Foreground}"
                  IsHitTestVisible="False"
                  Content="{TemplateBinding OnContent}"
                  ContentTemplate="{TemplateBinding OnContentTemplate}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  AutomationProperties.AccessibilityView="Raw" />
                                    <Rectangle x:Name="OuterBorder"
                  Grid.Row="1"
                  Height="20"
                  Width="44"
                  RadiusX="10"
                  RadiusY="10"
                  Fill="{ThemeResource ToggleSwitchFillOff}"
                  Stroke="{ThemeResource ToggleSwitchStrokeOff}"
                  StrokeThickness="2" />
                                    <Rectangle x:Name="SwitchKnobBounds"
                  Grid.Row="1"
                  Height="20"
                  Width="44"
                  RadiusX="10"
                  RadiusY="10"
                  Fill="{ThemeResource ToggleSwitchFillOn}"
                  Stroke="{ThemeResource ToggleSwitchStrokeOn}"
                  StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}"
                  Opacity="0" />
                                    <Grid x:Name="SwitchKnob"
                  Grid.Row="1"
                  HorizontalAlignment="Left"
                  Width="20"
                  Height="20">
                                        <Ellipse x:Name="SwitchKnobOn"
                    Fill="{ThemeResource ToggleSwitchKnobFillOn}"
                    Width="10"
                    Height="10"
                    Opacity="0" />
                                        <Ellipse x:Name="SwitchKnobOff"
                    Fill="{ThemeResource ToggleSwitchKnobFillOff}"
                    Width="10"
                    Height="10" />
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="KnobTranslateTransform" />
                                        </Grid.RenderTransform>
                                    </Grid>
                                    <Thumb x:Name="SwitchThumb"
                  AutomationProperties.AccessibilityView="Raw"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="3">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="Transparent" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>

                                </Grid>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScheduleTableFlipViewStyle" TargetType="FlipView">
                <Setter Property="Background" Value="{ThemeResource FlipViewBackground}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="TabNavigation" Value="Once" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
                <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="True" />
                <Setter Property="ScrollViewer.IsVerticalScrollChainingEnabled" Value="True" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel AreScrollSnapPointsRegular="True" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="FlipView">
                            <Grid
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}">
                                <ScrollViewer x:Name="ScrollingHost"
                VerticalSnapPointsType="MandatorySingle"
                HorizontalSnapPointsType="MandatorySingle"
                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                Padding="{TemplateBinding Padding}"
                ZoomMode="Disabled"
                TabNavigation="{TemplateBinding TabNavigation}"
                IsTabStop="False"
                AutomationProperties.AccessibilityView="Raw">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScoreTableCellTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>

            <Style x:Key="ScoreTableTermGradePointTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
            </Style>

            <Style x:Key="ScheduleSummarySectionHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource SubtitleTextBlockStyle}">
                <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumHighColor}" />
                <Setter Property="Margin" Value="0,0,0,16" />
            </Style>

            <Style x:Key="ScheduleSummaryItemHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>

            <Style x:Key="ScheduleSummaryItemDescriptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
            </Style>

            <Style x:Key="MiscellaneousPageSectionContainerStackPanelStyle" TargetType="StackPanel">
                <Setter Property="Margin" Value="0,16,0,16" />
                <Setter Property="Spacing" Value="12" />
            </Style>

            <Style x:Key="MiscellaneousPageHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TitleTextBlockStyle}">
                <Setter Property="Margin" Value="0,0,0,8" />
            </Style>
            
            <StaticResource x:Key="MiscellaneousPageTitleTextBlockStyle" ResourceKey="SubtitleTextBlockStyle" />

            <StaticResource x:Key="MiscellaneousPageBodyTextBlockStyle" ResourceKey="BodyTextBlockStyle" />

            <Style x:Key="MiscellaneousPageWarningTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="Foreground" Value="{ThemeResource NonDestructiveWarningColorBrush}" />
            </Style>

            <Style x:Key="MiscellaneousPageDestructiveWarningTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="Foreground" Value="{ThemeResource DestructiveWarningColorBrush}" />
            </Style>

            <Style x:Key="MiscellaneousPageLinkButtonStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource TextBlockButtonStyle}">
                <Setter Property="Padding" Value="0" />
            </Style>

            <Style x:Key="MiscellaneousPageButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
                <Setter Property="MinWidth" Value="100" />
            </Style>

            <Style x:Key="AboutPageAppTitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TitleTextBlockStyle}">
                <Setter Property="Margin" Value="0,0,0,4" />
                <Setter Property="Foreground" Value="{ThemeResource SystemAccentColor}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>

            <Style x:Key="AboutPageLongRunningTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MiscellaneousPageBodyTextBlockStyle}">
                <Setter Property="MaxWidth" Value="540" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
            </Style>

            <Style x:Key="ScheduleTableSessionHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>

            <Storyboard x:Key="ScheduleWeekHeaderFadeToLeftAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                 From="0" To="-10" Duration="0:0:0.1" />
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="1" To="0" Duration="0:0:0.1" />
            </Storyboard>

            <Storyboard x:Name="ScheduleWeekHeaderFadeToRightAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                 From="0" To="10" Duration="0:0:0.1" />
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="1" To="0" Duration="0:0:0.1" />
            </Storyboard>

            <Storyboard x:Name="ScheduleWeekHeaderShowFromLeftAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                 From="-10" To="0" Duration="0:0:0.1" />
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="0" To="1" Duration="0:0:0.1" />
            </Storyboard>

            <Storyboard x:Name="ScheduleWeekHeaderShowFromRightAnimation">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                 From="10" To="0" Duration="0:0:0.1" />
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="0" To="1" Duration="0:0:0.1" />
            </Storyboard>
        </ResourceDictionary>
    </Application.Resources>
</Application>
