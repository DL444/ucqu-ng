<ResourceDictionary
    x:Class="DL444.Ucqu.App.WinUniversal.Themes.Generic"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:DL444.Ucqu.App.WinUniversal.Controls"
    xmlns:vm="using:DL444.Ucqu.App.WinUniversal.ViewModels"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkitExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions">

    <Style TargetType="controls:NavigationPaneButton">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:NavigationPaneButton">
                    <Grid
                        x:Name="LayoutRoot"
                        MinWidth="{TemplateBinding MinWidth}"
                        Height="{TemplateBinding MinHeight}"
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="Stretch">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{ThemeResource PaneToggleButtonWidth}" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundChecked}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Viewbox
                            x:Name="IconHost"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw">

                            <ContentPresenter
                                x:Name="Icon"
                                Content="{TemplateBinding Icon}"
                                AutomationProperties.AccessibilityView="Raw"/>

                        </Viewbox>

                        <ContentPresenter
                            x:Name="ContentPresenter"
                            VerticalContentAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontSize="{TemplateBinding FontSize}"
                            Grid.Column="1"
                            AutomationProperties.AccessibilityView="Raw"/>

                        <Border
                            x:Name="RevealBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Grid.ColumnSpan="2"/>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:MenuFlyoutContentItem">
        <Setter Property="Background" Value="{ThemeResource MenuFlyoutItemRevealBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutItemRevealBorderThickness}" />
        <Setter Property="Foreground" Value="{ThemeResource MenuFlyoutItemForeground}" />
        <Setter Property="Padding" Value="{ThemeResource MenuFlyoutItemThemePadding}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="KeyboardAcceleratorPlacementMode" Value="Hidden" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MenuFlyoutContentItem">
                    <Grid x:Name="LayoutRoot"
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}" >

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">

                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemRevealBackgroundPointerOver}" />
                                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrushPointerOver}" />
                                        <Setter Target="ContentHost.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed" />
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemRevealBackgroundPressed}" />
                                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrushPressed}" />
                                        <Setter Target="ContentHost.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                                        <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="LayoutRoot" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemRevealBackgroundDisabled}" />
                                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrushDisabled}" />
                                        <Setter Target="ContentHost.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                                        <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="PaddingSizeStates">
                                <VisualState x:Name="DefaultPadding" />
                                <VisualState x:Name="NarrowPadding">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemThemePaddingNarrow}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                    <VisualState.Setters>
                                        <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentHost"
                Content="{TemplateBinding Content}"
                Foreground="{TemplateBinding Foreground}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <TextBlock x:Name="KeyboardAcceleratorTextBlock"
                            Grid.Column="1"
                            Style="{ThemeResource CaptionTextBlockStyle}"
                            Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                            MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                            Margin="24,0,0,0"
                            Foreground="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Visibility="Collapsed"
                            AutomationProperties.AccessibilityView="Raw" />

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ScoreTable">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ScoreTable">
                    <Grid Padding="{TemplateBinding Padding}" 
                          Background="{TemplateBinding Background}" 
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <StackPanel Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScoreSet.HasTerms, Converter={StaticResource InvertedVisibilityBooleanConverter}}" 
                                    Spacing="8" Margin="16,12,0,12">
                            <TextBlock x:Uid="ScoreTableNoResultTitle" Style="{ThemeResource TitleTextBlockStyle}" />
                            <TextBlock x:Uid="ScoreTableNoResultDescription" Style="{ThemeResource BodyTextBlockStyle}" />
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScoreSet.HasTerms}" Spacing="12" Margin="16,12,0,12">
                            <SymbolIcon Symbol="Library" VerticalAlignment="Center" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Major}" VerticalAlignment="Center" Margin="0,0,12,0" />
                            <SymbolIcon Symbol="OutlineStar" VerticalAlignment="Center" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScoreSet.GradePointDisplay}" VerticalAlignment="Center" />
                        </StackPanel>

                        <ListView ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScoreSet.Terms.View}" SelectionMode="None" IsItemClickEnabled="False" 
                                  toolkitExtensions:ListViewExtensions.AlternateColor="{ThemeResource ScoreAlternateRowBackgroundBrush}" 
                                  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScoreSet.HasTerms}" Grid.Row="1">
                            <ListView.Resources>
                                <SolidColorBrush x:Key="ListViewHeaderItemDividerStroke" Color="Transparent" />
                            </ListView.Resources>
                            <ListView.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderContainerStyle>
                                        <Style TargetType="ListViewHeaderItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Padding" Value="16,0,16,0" />
                                            <Setter Property="Margin" Value="0" />
                                        </Style>
                                    </GroupStyle.HeaderContainerStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate x:DataType="vm:TermViewModel">
                                            <UserControl>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup>
                                                            <VisualState>
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="800" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="StarHeader.Width" Value="2*" />
                                                                    <Setter Target="LecturerHeader.Width" Value="80" />
                                                                    <Setter Target="ScoreTableHeaderLecturer.Visibility" Value="Visible" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState>
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="1228" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="CommentHeader.Width" Value="80" />
                                                                    <Setter Target="StarHeader.Width" Value="2*" />
                                                                    <Setter Target="LecturerHeader.Width" Value="80" />
                                                                    <Setter Target="ScoreTableHeaderLecturer.Visibility" Value="Visible" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <StackPanel Spacing="24" Orientation="Horizontal" Margin="0,0,0,16">
                                                        <TextBlock Text="{Binding DisplayName}" Style="{ThemeResource TitleTextBlockStyle}" VerticalAlignment="Center" />
                                                        <TextBlock Text="{Binding GradePointDisplay}" Style="{ThemeResource ScoreTableTermGradePointTextBlockStyle}" />
                                                    </StackPanel>
                                                    <Grid ColumnSpacing="16" Grid.Row="1" Margin="0,0,0,4">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition x:Name="NameHeader" Width="3*" />
                                                            <ColumnDefinition x:Name="CommentHeader" Width="0" />
                                                            <ColumnDefinition x:Name="CreditHeader" Width="60" />
                                                            <ColumnDefinition x:Name="ScoreHeader" Width="60" />
                                                            <ColumnDefinition x:Name="GradePointHeader" Width="60" />
                                                            <ColumnDefinition x:Name="StarHeader" Width="0" />
                                                            <ColumnDefinition x:Name="LecturerHeader" Width="0" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock x:Uid="ScoreTableHeaderCourseName" Style="{ThemeResource BaseTextBlockStyle}" VerticalAlignment="Center"  Grid.Column="0" />
                                                        <TextBlock x:Uid="ScoreTableHeaderCredit" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center" Grid.Column="2" />
                                                        <TextBlock x:Uid="ScoreTableHeaderScore" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center" Grid.Column="3" />
                                                        <TextBlock x:Uid="ScoreTableHeaderGradePoint" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center" Grid.Column="4" />
                                                        <TextBlock x:Name="ScoreTableHeaderLecturer" x:Uid="ScoreTableHeaderLecturer" Style="{ThemeResource BodyTextBlockStyle}" Visibility="Collapsed" VerticalAlignment="Center" Grid.Column="6" />
                                                    </Grid>
                                                </Grid>
                                            </UserControl>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ListView.GroupStyle>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Padding" Value="16,0,16,0" />
                                    <Setter Property="Margin" Value="0,0,0,4" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsStackPanel AreStickyGroupHeadersEnabled="False" GroupPadding="0,0,0,24" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="vm:CourseViewModel">
                                    <UserControl>
                                        <Grid ColumnSpacing="16">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>
                                                    <VisualState>
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="800" />
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="StarCell.Width" Value="2*" />
                                                            <Setter Target="LecturerCell.Width" Value="80" />
                                                            <Setter Target="ScoreTableCellStars.Visibility" Value="Visible" />
                                                            <Setter Target="ScoreTableCellLecturer.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState>
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="1228" />
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="CommentCell.Width" Value="80" />
                                                            <Setter Target="StarCell.Width" Value="2*" />
                                                            <Setter Target="LecturerCell.Width" Value="80" />
                                                            <Setter Target="ScoreTableCellComment.Visibility" Value="Visible" />
                                                            <Setter Target="ScoreTableCellStars.Visibility" Value="Visible" />
                                                            <Setter Target="ScoreTableCellLecturer.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="NameCell" Width="3*" />
                                                <ColumnDefinition x:Name="CommentCell" Width="0" />
                                                <ColumnDefinition x:Name="CreditCell" Width="60" />
                                                <ColumnDefinition x:Name="ScoreCell" Width="60" />
                                                <ColumnDefinition x:Name="GradePointCell" Width="60" />
                                                <ColumnDefinition x:Name="StarCell" Width="0" />
                                                <ColumnDefinition x:Name="LecturerCell" Width="0" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="{Binding ShortName}" Style="{ThemeResource ScoreTableCellTextBlockStyle}" FontWeight="Bold" Grid.Column="0" />
                                            <TextBlock x:Name="ScoreTableCellComment" Text="{Binding Comment}" Style="{ThemeResource ScoreTableCellTextBlockStyle}" Visibility="Collapsed" Grid.Column="1" />
                                            <TextBlock Text="{Binding Credit}" Style="{ThemeResource ScoreTableCellTextBlockStyle}" Grid.Column="2" />
                                            <TextBlock Text="{Binding Score}" Style="{ThemeResource ScoreTableCellTextBlockStyle}" Grid.Column="3" />
                                            <TextBlock Text="{Binding GradePointDisplay}" Style="{ThemeResource ScoreTableCellTextBlockStyle}" Grid.Column="4" />
                                            <muxc:RatingControl x:Name="ScoreTableCellStars" Value="{Binding StarCount}" IsReadOnly="True" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="5" />
                                            <TextBlock x:Name="ScoreTableCellLecturer" Text="{Binding ShortLecturer}" Style="{ThemeResource ScoreTableCellTextBlockStyle}" Visibility="Collapsed" Grid.Column="6" />
                                        </Grid>
                                    </UserControl>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
